### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  author: Author!
  token: String!
}

type Author {
  email: String
  id: Int
  name: String
  password: String
  posts: [Post]
  surname: String
  ts_created: Date
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar Date

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

input LoginAuthorInput {
  email: String!
  password: String!
}

type Mutation {
  createPost(data: PostCreateInput!): Post!
  deletePost(id: Int!): Post
  loginAuthor(data: LoginAuthorInput!): AuthPayload!
  signupAuthor(data: SignupAuthorInput!): Author!
}

type Post {
  authorId: Int
  body: String
  id: Int
  postedBy: Author
  published: Boolean
  title: String
  ts_created: DateTime
}

input PostCreateInput {
  body: String
  published: Boolean
  title: String!
}

input PostOrderByInput {
  id: Sort
  title: Sort
}

type Query {
  listPosts(filter: String, orderBy: [PostOrderByInput!], skip: Int, take: Int): [Post!]!
  viewPost(id: Int!): Post
}

input SignupAuthorInput {
  email: String!
  name: String!
  password: String!
  surname: String!
}

enum Sort {
  asc
  desc
}